#!/usr/bin/env node
'use strict'
/**
 * run-js - A prototyping server that just works.
 *
 * @author Zach Bruggeman <mail@bruggie.com>
 */

const path = require('path')
const mkdirp = require('mkdirp')
const yargs = require('yargs')
const open = require('open')
const RunJS = require('../lib')

let argv = yargs
  .usage('Usage: run-js [--no-watch] [--dir=</path/to/directory>] [--port=<8080>] [path/to/script]\n\nPassing a relative path to a script file will automatically open it in the browser.')
  .options({
    watch: {
      alias: 'w',
      type: 'boolean',
      default: true,
      description: 'Enables the LiveReload server. Enabled by default. Pass --no-watch to disable.'
    },
    dir: {
      alias: 'd',
      type: 'string',
      default: process.cwd(),
      description: 'Directory for run-js to run in.'
    },
    port: {
      alias: 'p',
      default: 60274,
      description: 'Port for the run-js server to listen on.'
    },
    handler: {
      alias: 'h',
      type: 'array',
      default: [],
      description: 'File handler(s) to add to the default handlers provided by run-js.'
    },
    transform: {
      alias: 't',
      type: 'array',
      default: [],
      description: 'Global transforms(s) to add to the default transforms provided by run-js.'
    },
    plugin: {
      alias: 'pl',
      type: 'array',
      default: [],
      description: 'Global plugin(s) to add to the default plugins provided by run-js.'
    }
  })
  .help('help')
  .version(require('../package.json').version)
  .strict()
  .argv

// Create node_modules if it doesn't exist in the current folder
mkdirp.sync(path.join(process.cwd(), 'node_modules'))

if (!path.isAbsolute(argv.dir)) {
  argv.dir = path.resolve(process.cwd(), argv.dir)
}

let handlers = argv.handler.map(h => require(h))
let transforms = argv.transform.map(t => require(t))
let plugins = argv.plugin.map(p => require(p))

argv.handlers = require('../lib/default-handlers').concat(handlers)
argv.transforms = require('../lib/default-transforms').concat(transforms)
argv.plugins = [].concat(plugins)

let app = new RunJS(argv)

app.start(err => {
  if (err) throw err
  console.log(`run-js is listening on http://localhost:${argv.port}`)
  if (argv._[0]) {
    console.log(`Opening http://localhost:${argv.port}/${argv._[0]} in your browser.`)
    open(`http://localhost:${argv.port}/${argv._[0]}`)
  } else {
    console.log(`Open a file from this directory in the browser to see it in action.`)
    console.log('Example: Create a file named `foo.js` in this directory, and visit')
    console.log('http://localhost:60274/foo.js in your browser to see it ran.')
  }
})
